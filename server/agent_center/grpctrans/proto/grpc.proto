syntax = "proto3";
option go_package = "grpc";
package grpc;

//pb for rawdata
//agent --> server
message RawData{
  repeated Record Data = 1;
  string AgentID = 2;
  repeated string IntranetIPv4 = 3;
  repeated string ExtranetIPv4 = 4;
  repeated string IntranetIPv6 = 5;
  repeated string ExtranetIPv6 = 6;
  string Hostname = 7;
  string Version = 8;
  string Product = 9;
}

message Record{
  int32 DataType = 1;
  int64 Timestamp = 2;
  bytes Body = 3;
  bytes AppendedBody = 4;
}

message Item{
  map<string,string> Fields = 1;
}

message Field {
  string key = 1;
  string value = 2;
}

message ItemArray {
  repeated Field fields = 1;
}


//server --> agent
message Command {
  int32 AgentCtrl = 1; // 控制指令
  PluginTask Task = 2; // 功能模块指令
  repeated ConfigItem Config = 3;
}

message PluginTask{
  //新增DataType对Data进行控制
  int32 DataType = 1;
  // 插件名字
  string Name = 2;
  // JSON
  string Data = 3;
  // 对账
  string Token = 4;
}

message ConfigItem{
  string Name = 1;
  string Type = 2;
  string Version = 3;
  string SHA256 = 4;
  string Signature = 5;
  repeated string DownloadURL = 6;
  string Detail = 7;
}


//server -> bmq
message MQData{
  int32 DataType = 1;
  int64 AgentTime = 2;
  bytes Body = 3;

  string AgentID = 4;
  string IntranetIPv4 = 5;
  string ExtranetIPv4 = 6;
  string IntranetIPv6 = 7;
  string ExtranetIPv6 = 8;
  string Hostname = 9;
  string Version = 10;
  string Product = 11;

  //server端补全字段
  int64  SvrTime = 12;
  string PSMName = 13;
  string PSMPath = 14;
  string Tag = 15;
  string Enhanced = 16;
  string IsHoneypot = 17;

  bytes AppendedBody = 18;
}

//bmq --> Rule engine
message MQRawData{
  int32 DataType = 1;
  int64 AgentTime = 2;
  Item Body = 3;

  string AgentID = 4;
  string IntranetIPv4 = 5;
  string ExtranetIPv4 = 6;
  string IntranetIPv6 = 7;
  string ExtranetIPv6 = 8;
  string Hostname = 9;
  string Version = 10;
  string Product = 11;

  //server端补全字段
  int64  SvrTime = 12;
  string PSMName = 13;
  string PSMPath = 14;
  string Tag = 15;
  string Enhanced = 16;
  string IsHoneypot = 17;

  //agent appended字段
  ItemArray AppendedBody = 18;
  string AccountID = 19;
}

service Transfer {
  rpc Transfer (stream RawData) returns (stream Command){}
}


//pb for file upload
message UploadRequest {
  string Token = 1;
  bytes Data = 2;
}

message UploadResponse {
  enum StatusCode {
    SUCCESS = 0;
    FAILED = 1;
  }
  StatusCode Status = 1;
}

message DownloadRequest {
  string token = 1;
}

message DownloadResponse {
  bytes data = 1;
}

service FileExt {
  rpc Upload(stream UploadRequest) returns (UploadResponse);
  rpc Download(DownloadRequest) returns (stream DownloadResponse);
}

//pb for config refresh
enum ConfigStatusCode {
  SUCCESS = 0;
  FAILED = 1;
}

enum ConfigTypeCode {
  File = 0;
  Config = 1;
  Remove = 2;
}

enum ConfigFPStatusCode {
  Exist = 0;
  Nonexistent = 1;
}

message ConfigRefreshRequest{
  string AgentID = 1;
  string PluginName = 2;
  repeated ConfigFingerPrint Fingerprint  = 3;
}

message ConfigFingerPrint{
  string Path = 1;
  string Hash = 2;
  ConfigFPStatusCode Status = 3;
}

message ConfigRefreshResponse{
  string PluginName = 1;
  string SecretKey = 2; //预留字段，默认使用default_key加解密
  string Version = 3;
  uint64 Release = 4;
  ConfigStatusCode Status = 5;
  repeated ConfigDetail Config  = 6;
}

message ConfigDetail {
  string Path = 1;
  ConfigStatusCode Status = 2;
  string Data = 3;    // type = config/file 的时候使用
  ConfigTypeCode Type = 4;
  string Hash = 5;    //文件hash，type = config 的时候使用
  string Detail = 6;
}


service ConfigExt {
  rpc CheckConfig(ConfigRefreshRequest) returns (ConfigRefreshResponse);
}
